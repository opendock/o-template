version: '3'

networks:
  default:
    external:
      name: ${NETWORK_NAME}

volumes:
  mongodata:

services:

  # Work Space
  #---------------------------------------------------------
  workspace:
    image: ${COMPOSE_IMAGES_NAMESPACE}/workspace
    build:
      context: ${DOCKER_FILES_DIR}/workspace
      args:
        - BASE_TAG=${WS_BASE_TAG}
        - CHROME_DRIVER_VERSION=${WS_CHROME_DRIVER_VERSION}
        - COMPOSER_AUTH=${WS_COMPOSER_AUTH}
        - COMPOSER_GLOBAL_INSTALL=${WS_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_REPO_PACKAGIST=${WS_COMPOSER_REPO_PACKAGIST}
        - DRUSH_VERSION=${WS_DRUSH_VERSION}
        - NODE_VERSION=${WS_NODE_VERSION}
        - NPM_REGISTRY=${WS_NPM_REGISTRY}
        - PGID=${WS_PGID}
        - PUID=${WS_PUID}
        - TZ=${WS_TIMEZONE}
        - YARN_VERSION=${WS_YARN_VERSION}
        - INSTALL_AMQP=${WS_INSTALL_AMQP}
        - INSTALL_COMPOSER=${WS_INSTALL_COMPOSER}
        - INSTALL_DEPLOYER=${WS_INSTALL_DEPLOYER}
        - INSTALL_DRUPAL_CONSOLE=${WS_INSTALL_DRUPAL_CONSOLE}
        - INSTALL_DRUSH=${WS_INSTALL_DRUSH}
        - INSTALL_DUSK_DEPS=${WS_INSTALL_DUSK_DEPS}
        - INSTALL_FFMPEG=${WS_INSTALL_FFMPEG}
        - INSTALL_GMP=${WS_INSTALL_GMP}
        - INSTALL_IMAGE_OPTIMIZERS=${WS_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${WS_INSTALL_IMAGEMAGICK}
        - INSTALL_IMAP=${WS_INSTALL_IMAP}
        - INSTALL_IONCUBE=${WS_INSTALL_IONCUBE}
        - INSTALL_LARAVEL_ENVOY=${WS_INSTALL_LARAVEL_ENVOY}
        - INSTALL_LARAVEL_INSTALLER=${WS_INSTALL_LARAVEL_INSTALLER}
        - INSTALL_LDAP=${WS_INSTALL_LDAP}
        - INSTALL_LIBPNG=${WS_INSTALL_LIBPNG}
        - INSTALL_LINUXBREW=${WS_INSTALL_LINUXBREW}
        - INSTALL_MC=${WS_INSTALL_MC}
        - INSTALL_MCRYPT=${WS_INSTALL_MCRYPT}
        - INSTALL_MONGO=${WS_INSTALL_MONGO}
        - INSTALL_MSSQL=${WS_INSTALL_MSSQL}
        - INSTALL_MYSQL_CLIENT=${WS_INSTALL_MYSQL_CLIENT}
        - INSTALL_NODE=${WS_INSTALL_NODE}
        - INSTALL_NPM_CHECK_UPDATE=${WS_INSTALL_NPM_CHECK_UPDATE}
        - INSTALL_NPM_ANGULAR_CLI=${WS_INSTALL_NPM_ANGULAR_CLI}
        - INSTALL_NPM_BOWER=${WS_INSTALL_NPM_BOWER}
        - INSTALL_NPM_GULP=${WS_INSTALL_NPM_GULP}
        - INSTALL_NPM_VUE_CLI=${WS_INSTALL_NPM_VUE_CLI}
        - INSTALL_PG_CLIENT=${WS_INSTALL_PG_CLIENT}
        - INSTALL_PHPDBG=${WS_INSTALL_PHPDBG}
        - INSTALL_PHPREDIS=${WS_INSTALL_PHPREDIS}
        - INSTALL_POWERLINE=${WS_INSTALL_POWERLINE}
        - INSTALL_PRESTISSIMO=${WS_INSTALL_PRESTISSIMO}
        - INSTALL_PYTHON=${WS_INSTALL_PYTHON}
        - INSTALL_SOAP=${WS_INSTALL_SOAP}
        - INSTALL_SSH2=${WS_INSTALL_SSH2}
        - INSTALL_SUBVERSION=${WS_INSTALL_SUBVERSION}
        - INSTALL_SWOOLE=${WS_INSTALL_SWOOLE}
        - INSTALL_SYMFONY=${WS_INSTALL_SYMFONY}
        - INSTALL_TERRAFORM=${WS_INSTALL_TERRAFORM}
        - INSTALL_V8JS=${WS_INSTALL_V8JS}
        - INSTALL_WS_SSH=${WS_INSTALL_WS_SSH}
        - INSTALL_WP_CLI=${WS_INSTALL_WP_CLI}
        - INSTALL_XDEBUG=${WS_INSTALL_XDEBUG}
        - INSTALL_XSL=${WS_INSTALL_XSL}
        - INSTALL_YARN=${WS_INSTALL_YARN}
    container_name: ${COMPOSE_PROJECT_NAME}.ws
    restart: always
    volumes:
      - ${APP_BASE_DIR}/${APP_CODE_DIR}:${WS_DOCUMENT_ROOT}${WS_DOCUMENT_ROOT_FLAG}
    ports:
      - "${WS_SSH_PORT}:22"
    tty: true
    environment:
      - PHP_VERSION=${PHP_VERSION}
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}

  # Apache Server
  #---------------------------------------------------------
  apache:
    image: ${COMPOSE_IMAGES_NAMESPACE}/apache
    build:
      context: ${DOCKER_FILES_DIR}/apache
      args:
        - HTTPD_VERSION=${HTTPD_VERSION}
        - LINUX_DISTRO=${LINUX_DISTRO}
        - APACHE_CONFIG_PATH=${APACHE_CONFIG_PATH}
    container_name: ${COMPOSE_PROJECT_NAME}.apache
    restart: always
    environment:
      VIRTUAL_HOST: ${APACHE_VIRTUAL_HOST}
      APACHE_CONFIG_PATH: ${APACHE_CONFIG_PATH}
    volumes:
      - ${APP_BASE_DIR}/${APP_CODE_DIR}:${APACHE_DOCUMENT_ROOT}${APACHE_DOCUMENT_ROOT_FLAG}
      - ${APP_BASE_DIR}/${APP_BASE_CONFIG_DIR}/${APP_APACHE_CONFIG_DIR}/sites/apache.conf:${APACHE_CONFIG_PATH}/apache.conf
      - ${APP_BASE_DIR}/${APP_BASE_CONFIG_DIR}/${APP_APACHE_CONFIG_DIR}/ssl:/etc/apache/ssl
      - ${APP_BASE_DIR}/${APP_BASE_LOG_DIR}/${APP_APACHE_LOG_DIR}:/var/log/apache2
    ports:
      - "${APACHE_HTTP_PORT}:80"

  # NGINX Server
  #---------------------------------------------------------
  nginx:
    image: ${COMPOSE_IMAGES_NAMESPACE}/nginx
    build:
      context: ${DOCKER_FILES_DIR}/nginx
      args:
        - UPSTREAM_CONTAINER=${NGINX_UPSTREAM_CONTAINER}
        - UPSTREAM_PORT=${NGINX_UPSTREAM_PORT}
        - CHANGE_SOURCE=${NGINX_CHANGE_SOURCE}
    container_name: ${COMPOSE_PROJECT_NAME}.apache
    restart: always
    volumes:
      - ${APP_BASE_DIR}/${APP_CODE_DIR}:${NGINX_DOCUMENT_ROOT}${NGINX_DOCUMENT_ROOT_FLAG}
      - ${APP_BASE_DIR}/${APP_BASE_LOG_DIR}/${APP_NGINX_LOG_DIR}:/var/log/nginx
      - ${APP_BASE_DIR}/${APP_BASE_CONFIG_DIR}/${APP_NGINX_CONFIG_DIR}/sites:/etc/nginx/sites-available
      - ${APP_BASE_DIR}/${APP_BASE_CONFIG_DIR}/${APP_NGINX_CONFIG_DIR}/ssl:/etc/nginx/ssl
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"

  # PHP-FPM
  #---------------------------------------------------------
  php:
    image: ${COMPOSE_IMAGES_NAMESPACE}/php
    build:
      context: ${DOCKER_FILES_DIR}/php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
        - ADDITIONAL_LOCALES=${PHP_ADDITIONAL_LOCALES}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_AMQP=${PHP_INSTALL_AMQP}
        - INSTALL_APCU=${PHP_INSTALL_APCU}
        - INSTALL_BCMATH=${PHP_INSTALL_BCMATH}
        - INSTALL_CALENDAR=${PHP_INSTALL_CALENDAR}
        - INSTALL_COMPOSER=${PHP_INSTALL_COMPOSER}
        - INSTALL_EXIF=${PHP_INSTALL_EXIF}
        - INSTALL_FAKETIME=${PHP_INSTALL_FAKETIME}
        - INSTALL_GHOSTSCRIPT=${PHP_INSTALL_GHOSTSCRIPT}
        - INSTALL_GMP=${PHP_INSTALL_GMP}
        - INSTALL_IMAGEMAGICK=${PHP_INSTALL_IMAGEMAGICK}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAP=${PHP_INSTALL_IMAP}
        - INSTALL_INTL=${PHP_INSTALL_INTL}
        - INSTALL_IONCUBE=${PHP_INSTALL_IONCUBE}
        - INSTALL_LDAP=${PHP_INSTALL_LDAP}
        - INSTALL_MEMCACHED=${PHP_INSTALL_MEMCACHED}
        - INSTALL_MYSQLI=${PHP_INSTALL_MYSQLI}
        - INSTALL_MYSQL_CLIENT=${PHP_INSTALL_MYSQL_CLIENT}
        - INSTALL_MONGO=${PHP_INSTALL_MONGO}
        - INSTALL_MSSQL=${PHP_INSTALL_MSSQL}
        - INSTALL_OPCACHE=${PHP_INSTALL_OPCACHE}
        - INSTALL_PCNTL=${PHP_INSTALL_PCNTL}
        - INSTALL_PGSQL=${PHP_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_INSTALL_PG_CLIENT}
        - INSTALL_PHPDBG=${PHP_INSTALL_PHPDBG}
        - INSTALL_PHPREDIS=${PHP_INSTALL_PHPREDIS}
        - INSTALL_SOAP=${PHP_INSTALL_SOAP}
        - INSTALL_SSH2=${PHP_INSTALL_SSH2}
        - INSTALL_SWOOLE=${PHP_INSTALL_SWOOLE}
        - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG}
        - INSTALL_XSL=${PHP_INSTALL_XSL}
        - INSTALL_YAML=${PHP_INSTALL_YAML}
        - INSTALL_ZIP=${PHP_INSTALL_ZIP}
    container_name: ${COMPOSE_PROJECT_NAME}.php
    restart: always
    volumes:
      - ${APP_BASE_DIR}/${APP_CODE_DIR}:${PHP_DOCUMENT_ROOT}
      - ${APP_BASE_DIR}/${APP_BASE_CONFIG_DIR}/${APP_PHP_CONFIG_DIR}/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - FAKETIME=${PHP_FAKETIME}

  # Node
  #---------------------------------------------------------
  node:
    image: ${COMPOSE_IMAGES_NAMESPACE}/node
    build:
      context: ${DOCKER_FILES_DIR}/node
      args:
        - NODE_VERSION=${NODE_VERSION}
        - YARN_VERSION=${NODE_YARN_VERSION}
        - INSTALL_YARN=${NODE_INSTALL_YARN}
        - INSTALL_NODEMON=${NODE_INSTALL_NODEMON}
        - INSTALL_PG_CLIENT=${NODE_PG_CLIENT}
        - INSTALL_INTL=${NODE_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${NODE_INSTALL_GHOSTSCRIPT}
        - INSTALL_IMAGE_OPTIMIZERS=${NODE_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${NODE_INSTALL_IMAGEMAGICK}
        - NPM_START_SCRIPT=${NODE_NPM_START_SCRIPT}
        - PUPPETEER_SUPPORT=${NODE_PUPPETEER_SUPPORT}
    container_name: ${COMPOSE_PROJECT_NAME}.node
    environment:
      VIRTUAL_HOST: ${APACHE_VIRTUAL_HOST}
    volumes:
      - ${APP_BASE_DIR}/${APP_CODE_DIR}:${NODE_DOCUMENT_ROOT}
    depends_on:
      - workspace

  # MySQL
  #---------------------------------------------------------
  mysql:
    image: ${COMPOSE_IMAGES_NAMESPACE}/mysql
    build:
      context: ${DOCKER_FILES_DIR}/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
        - TZ=${MYSQL_TIMEZONE}
    container_name: ${COMPOSE_PROJECT_NAME}.mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
      - VIRTUAL_HOST=${MYSQL_VIRTUAL_HOST}
    volumes:
      - ${APP_BASE_DIR}/${APP_BASE_CONFIG_DIR}/${APP_MYSQL_CONFIG_DIR}:/etc/mysql/conf.d
      - ${APP_BASE_DIR}/${APP_DATA_DIR}:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"

  # MongoDB
  #---------------------------------------------------------
  mongo:
    image: 'mongo'
    container_name: ${COMPOSE_PROJECT_NAME}.mongo
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
      - VIRTUAL_HOST=${MONGO_VIRTUAL_HOST}
      #- MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      #- MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodata:/data/db
      #- ${APP_BASE_DIR}/${APP_DATA_DIR}/mongo:/data/db
      #- ${APP_BASE_DIR}/${APP_DATA_DIR}/mongo-init/001_users.js:/docker-entrypoint-initdb.d/001_users.js:ro

  # MongoWebUI
  #---------------------------------------------------------
  mongo-webui:
    image: ${COMPOSE_IMAGES_NAMESPACE}/mongo-webui
    build:
      context: ${DOCKER_FILES_DIR}/mongo-webui
    container_name: ${COMPOSE_PROJECT_NAME}.mongo.web
    restart: always
    environment:
      - ROOT_URL=${MONGO_WEBUI_ROOT_URL}
      - MONGO_URL=${MONGO_WEBUI_MONGO_URL}
      - INSTALL_MONGO=${MONGO_WEBUI_INSTALL_MONGO}
      - VIRTUAL_HOST=${MONGO_WEBUI_VIRTUAL_HOST}
    volumes:
      - mongodata:/data/db
      #- ${APP_BASE_DIR}/${APP_DATA_DIR}/mongoweb:/data/db
    ports:
      - "${MONGO_WEBUI_PORT}:3000"
    depends_on:
      - mongo